[{"C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\index.js":"1","C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\App.js":"2","C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\layouts\\MainLayout.js":"3","C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\components\\Header.js":"4","C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\components\\GraphViewer.js":"5","C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\util\\DataLoader.js":"6","C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\components\\StyledSplitPane.js":"7","C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\components\\SwitchMenu.js":"8","C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\components\\Footer.js":"9"},{"size":241,"mtime":1612920793664,"results":"10","hashOfConfig":"11"},{"size":5033,"mtime":1612924334886,"results":"12","hashOfConfig":"11"},{"size":403,"mtime":1611761033882,"results":"13","hashOfConfig":"11"},{"size":480,"mtime":1612566596199,"results":"14","hashOfConfig":"11"},{"size":3543,"mtime":1612922338752,"results":"15","hashOfConfig":"11"},{"size":225,"mtime":1611795498016,"results":"16","hashOfConfig":"11"},{"size":619,"mtime":1612582356453,"results":"17","hashOfConfig":"11"},{"size":779,"mtime":1612921146817,"results":"18","hashOfConfig":"11"},{"size":492,"mtime":1612583489540,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"s2xdbk",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\index.js",[],["42","43"],"C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\App.js",["44"],"import React , {useState , useEffect} from 'react';\nimport styled from 'styled-components';\n\nimport MainLayout from './layouts/MainLayout';\nimport GraphViewer from './components/GraphViewer';\nimport StyledSplitPane from './components/StyledSplitPane';\nimport SwitchMenu from './components/SwitchMenu';\nimport Footer from './components/Footer';\n\nimport DataLoader from './util/DataLoader';\n\nimport Data from './data/data.json';\n\n\nlet MenuAndFooter = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\n\nlet SwitchMenuPage = styled.div`\n    width: calc(100% - 100px);\n    height: 100%;\n    color: #f7f7f7;\n    font-family: 'Courier New', Courier, monospace;\n\n    padding: 50px;\n\n    h2 {\n        font-weight: bold;\n        font-size: 20px;\n        margin-bottom: 15px;\n    }\n\n    h3 {\n        font-size: 20px;\n        line-height: 30px;\n        margin-bottom: 45px;\n    }\n`;\n\n\nfunction App() {\n    let [splitWidth , setSplitWidth] = useState(window.innerWidth);\n    let [graphWidth , setGraphWidth] = useState(splitWidth / 3 * 2);\n    let [graphHeight , setGraphHeight] = useState(window.innerHeight - 100);\n    let [currentNode , setCurrentNode] = useState(null);\n\n\n    useEffect(() => {\n        window.addEventListener('resize' ,  onWindowResize);\n\n        return () => {\n            window.removeEventListener('resize' , onWindowResize);\n        }\n    });\n\n\n    function setDim() {\n        setGraphWidth(window.innerWidth / 2)\n        setGraphHeight(window.innerHeight - 100)\n    }\n\n\n    function onWindowResize() {\n        // Proportional size after resize \n        setGraphWidth(graphWidth / splitWidth * window.innerWidth);\n        setGraphHeight(window.innerHeight - 100);\n\n        setSplitWidth(window.innerWidth);\n    }\n\n\n    /*\n        This is what gets called when the SplitPane bar is\n        moved to resize the panes but not the component\n    */\n    function onSplitResize(size) {\n        setGraphWidth(size);\n    }\n\n\n    let dataLoader = new DataLoader();\n    dataLoader.load(Data);\n\n\n    function onNodeClick(node , event) {\n        setCurrentNode(node);\n    }\n\n\n    let NodeDataPage = () => {\n        let pageContent;\n\n        if(currentNode === null) {\n            pageContent = (\n                <SwitchMenuPage style={{display: 'flex' , flexDirection: 'column' , justifyContent: 'center' , alignItems: 'center'}}>\n                    <h1> Click on a node to see its details. </h1>\n                    <div style={{height: '20px'}}> </div>\n                    <h1> Click on the background to zoom and pan to fit. </h1>\n                </SwitchMenuPage>\n            );\n        }\n        else {\n            let courseType = 'Unknown';\n\n            switch(currentNode.type) {\n                case 'required':\n                    courseType = 'Required';\n                    break;\n                \n                case 'elective':\n                    courseType = 'Elective';\n                    break;\n                \n                case 'cseonly':\n                    courseType = 'CSE Major Requirement Only';\n                    break;\n                \n                case 'notoffered':\n                    courseType = 'Not Offered This Year';\n                    break;\n                \n                case 'capstone':\n                    courseType = 'Computer Science Capstone';\n                    break;\n                \n                case 'optional':\n                    courseType = 'Optional';\n                    break;\n                \n                default:\n                    courseType = 'Unknown';\n            }\n\n            pageContent = (\n                <SwitchMenuPage>\n                    <h1 style={{fontSize: '25px' , marginBottom: '50px'}}>\n                        {currentNode.name}\n                    </h1>\n\n                    <h2> Course Type: </h2>\n                    <h3> {courseType} </h3>\n\n                    <h2> Course Description: </h2>\n                    <h3> {currentNode.description} </h3>\n\n                    <h2> Course Taken: </h2>\n                    <h3> {(currentNode.taken) ? 'Taken' : 'Not Taken'} </h3>\n                </SwitchMenuPage>\n            );\n        }\n\n        return pageContent;\n    }\n\n    let pages = [NodeDataPage()];\n\n    return (\n        <div className=\"App\">\n            <MainLayout>\n                <StyledSplitPane split=\"vertical\" minSize={200} defaultSize={window.innerWidth / 3 * 2} onChange={onSplitResize} size={graphWidth} >\n                    <GraphViewer \n                        width={graphWidth}\n                        height={graphHeight}\n                        data={dataLoader.getData()}\n                        onNodeClick={onNodeClick}\n                    />\n                    <MenuAndFooter>\n                        <SwitchMenu pages={pages}>\n\n                        </SwitchMenu>       \n\n                        <Footer />\n                    </MenuAndFooter>\n                </StyledSplitPane>\n            </MainLayout>\n        </div>\n    );\n}\n\nexport default App;\n","C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\layouts\\MainLayout.js",[],"C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\components\\Header.js",[],["45","46"],"C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\components\\GraphViewer.js",[],"C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\util\\DataLoader.js",[],"C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\components\\StyledSplitPane.js",[],"C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\components\\SwitchMenu.js",["47","48"],"import React , { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nlet StyledSwitchMenu = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #1a1f29;\r\n`;\r\n\r\nlet StyledMenuBar = styled.div`\r\n    position: relative;\r\n    top: 0;\r\n\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #1a1f29;\r\n    border-bottom: solid;\r\n    border-width: 2px;\r\n    border-color: 12151c;\r\n`;\r\n\r\n\r\nexport default function SwitchMenu(props) {\r\n    const [pageIndex , setPageIndex] = useState(0);\r\n\r\n\r\n    return (\r\n        <StyledSwitchMenu className={props.className}>\r\n            <StyledMenuBar>\r\n\r\n            </StyledMenuBar>\r\n\r\n            {props.pages[0]}\r\n        </StyledSwitchMenu>\r\n    );\r\n}","C:\\Users\\FnMat\\Desktop\\graph-demo\\src\\components\\Footer.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":61,"column":14,"nodeType":"55","messageId":"56","endLine":61,"endColumn":20},{"ruleId":"49","replacedBy":"57"},{"ruleId":"51","replacedBy":"58"},{"ruleId":"53","severity":1,"message":"59","line":27,"column":12,"nodeType":"55","messageId":"56","endLine":27,"endColumn":21},{"ruleId":"53","severity":1,"message":"60","line":27,"column":24,"nodeType":"55","messageId":"56","endLine":27,"endColumn":36},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'setDim' is defined but never used.","Identifier","unusedVar",["61"],["62"],"'pageIndex' is assigned a value but never used.","'setPageIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]